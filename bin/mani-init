#!/usr/bin/env bash

function requirement()
{
    if ! command -v "$1" &>/dev/null
    then
        echo "Required executable not found: $1"
        exit 1
    fi
}

function help()
{
    # HELP_BEGIN
    echo "USAGE:"
    echo "  mani-init [OPTIONS]"
    echo
    echo "OPTIONS:"
    echo "  -f file1,file2,...          Select file to create project from"
    echo "                              (default: .git)"
    echo "  -n CMD                      Run command on project directory to assign a name"
    echo "                              (default: relative path from 'mani.yaml')."
    echo "  -s                          Sync existing 'mani.yaml' with additional projects."
    echo "  -h                          Show this help message"
    # HELP_END
    exit "${1:-0}"
}

# Variables to be used in the script.
files="^.git\$"         # Files to search for projects.
namecmd=""              # Command to run to give name.
sync=                   # Sync additional projects.
cfg="$PWD/mani.yaml"
lock="$cfg.lock"

# Parse arguments
while getopts "f:n:sh" flag
do
    case "$flag" in
        "f") files="^${OPTARG//,/|}\$";;
        "n") namecmd="$OPTARG";;
        "s") sync=1;;
        "h") help 0;;
        *) help 1;;
    esac
done

if [[ -f "$cfg" ]]
then
    [[ -z "$sync" ]] && echo "File '$(basename "$cfg")' already exists. Use option '-s' to sync existing configuration." && exit
else
    echo "projects:" > "$cfg"
fi

# Check for required executables.
requirement fd
requirement flock
requirement yq

# Generate yaml entry
config()
{
    file="$1"
    dirname="$(dirname "$file")"
    dirname=${dirname:2}
    cd "$dirname" || return
    [[ -n "$namecmd" ]] && name=$(eval "$namecmd") || name="$dirname"
    [[ "$(flock "$lock" command yq ".projects.$name" "$cfg")" != "null" ]] && return
    if [[ "$name" != "$dirname" ]]
    then
        flock "$lock" command yq -i ".projects.$name = {\"path\": \"$dirname\", \"sync\": false}" "$cfg"
    else
        flock "$lock" command yq -i ".projects.$name = {\"sync\": false}" "$cfg"
    fi
}

# Export names needed in 'config'.
export cfg
export lock
export namecmd
export -f config

fd "$files" --no-ignore --hidden -x sh -c 'config {}'
[[ $(cat "$cfg") == "projects:" ]] && echo "No projects created." && rm "$cfg" && exit 1
flock "$lock" command yq -i ".projects |= sort_keys(.)" "$cfg"
mani ls projects
